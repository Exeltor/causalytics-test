{"remainingRequest":"/Users/exeltor/Documents/github/causalytics-test/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/exeltor/Documents/github/causalytics-test/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/exeltor/Documents/github/causalytics-test/client/src/App.vue","mtime":1643825354629},{"path":"/Users/exeltor/Documents/github/causalytics-test/client/node_modules/cache-loader/dist/cjs.js","mtime":1643801277649},{"path":"/Users/exeltor/Documents/github/causalytics-test/client/node_modules/babel-loader/lib/index.js","mtime":1643801278132},{"path":"/Users/exeltor/Documents/github/causalytics-test/client/node_modules/cache-loader/dist/cjs.js","mtime":1643801277649},{"path":"/Users/exeltor/Documents/github/causalytics-test/client/node_modules/vue-loader/lib/index.js","mtime":1643801278312}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDaGFydCBmcm9tICcuL2NvbXBvbmVudHMvQ2hhcnQudnVlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENoYXJ0CiAgfSwKICBuYW1lOiAnQXBwJywKICBkYXRhOiAoKSA9PiAoewogICAgbG9hZGVkOiBmYWxzZSwKICAgIGVycm9yOiBmYWxzZSwKICAgIGNhbXBhaWduc0RhdGE6IFtdLAogICAgc2VsZWN0ZWRDYW1wYWlnbjogMCwKICAgIHN0eWxlczogewogICAgICBoZWlnaHQ6ICcyMCUnLAogICAgICB3aWR0aDogJzEwMCUnCiAgICB9CiAgfSksCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IHJhd0RhdGEgPSBhd2FpdCAoYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS9mYWNlYm9vay9nZXRDcGMnKSkuanNvbigpCiAgICAgIHRoaXMucHJlcGFyZURhdGEocmF3RGF0YSkKICAgIH0gY2F0Y2goZSkgewogICAgICB0aGlzLmVycm9yID0gdHJ1ZQogICAgICBjb25zb2xlLmxvZyhlKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcHJlcGFyZURhdGEoZGF0YSkgewogICAgICBmb3IobGV0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkYXRhKSkgewogICAgICAgIHRoaXMuY2FtcGFpZ25zRGF0YS5wdXNoKHsKICAgICAgICAgIGlkOiBrZXksCiAgICAgICAgICBuYW1lOiB2YWx1ZS5uYW1lLAogICAgICAgICAgbGFiZWxzOiB2YWx1ZS53ZWVrbHlEYXRhLm1hcCh3ZWVrID0+IHdlZWsuZGF0ZV9zdGFydCksCiAgICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgICAgbGFiZWw6ICdDUEMnLAogICAgICAgICAgICBkYXRhOiB2YWx1ZS53ZWVrbHlEYXRhLm1hcCh3ZWVrID0+IHdlZWsuY3BjKSwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjQkNEQ0UxJwogICAgICAgICAgfV0sCiAgICAgICAgICBzcGVuZDogdmFsdWUud2Vla2x5RGF0YS5tYXAod2VlayA9PiB3ZWVrLnNwZW5kKSwKICAgICAgICAgIGNsaWNrczogdmFsdWUud2Vla2x5RGF0YS5tYXAod2VlayA9PiB3ZWVrLmNsaWNrcykKICAgICAgICB9KQogICAgICB9CiAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZQogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBnZXRBdmVyYWdlQ1BDKCkgewogICAgICBsZXQgY3BjID0gMAogICAgICB0aGlzLmNhbXBhaWduc0RhdGFbdGhpcy5zZWxlY3RlZENhbXBhaWduXS5kYXRhc2V0c1swXS5kYXRhLmZvckVhY2god2Vla2x5Q3BjID0+IGNwYyArPSBwYXJzZUZsb2F0KHdlZWtseUNwYykpCgogICAgICBjb25zdCBhdmVyYWdlQ1BDID0gY3BjIC8gdGhpcy5jYW1wYWlnbnNEYXRhW3RoaXMuc2VsZWN0ZWRDYW1wYWlnbl0uZGF0YXNldHNbMF0uZGF0YS5sZW5ndGgKICAgICAgcmV0dXJuIGF2ZXJhZ2VDUEMudG9GaXhlZCgyKQogICAgfSwKICAgIGdldEF2ZXJhZ2VTcGVuZCgpIHsKICAgICAgbGV0IHNwZW5kID0gMAogICAgICB0aGlzLmNhbXBhaWduc0RhdGFbdGhpcy5zZWxlY3RlZENhbXBhaWduXS5zcGVuZC5mb3JFYWNoKHdlZWtseVNwZW5kID0+IHNwZW5kICs9IHBhcnNlRmxvYXQod2Vla2x5U3BlbmQpKQoKICAgICAgY29uc3QgYXZlcmFnZVNwZW5kID0gc3BlbmQgLyB0aGlzLmNhbXBhaWduc0RhdGFbdGhpcy5zZWxlY3RlZENhbXBhaWduXS5zcGVuZC5sZW5ndGgKICAgICAgcmV0dXJuIGF2ZXJhZ2VTcGVuZC50b0ZpeGVkKDIpCiAgICB9LAogICAgZ2V0QXZlcmFnZUNsaWNrcygpIHsKICAgICAgbGV0IGNsaWNrcyA9IDAKICAgICAgdGhpcy5jYW1wYWlnbnNEYXRhW3RoaXMuc2VsZWN0ZWRDYW1wYWlnbl0uY2xpY2tzLmZvckVhY2god2Vla2x5Q2xpY2tzID0+IGNsaWNrcyArPSBwYXJzZUZsb2F0KHdlZWtseUNsaWNrcykpCgogICAgICBjb25zdCBhdmVyYWdlQ2xpY2tzID0gY2xpY2tzIC8gdGhpcy5jYW1wYWlnbnNEYXRhW3RoaXMuc2VsZWN0ZWRDYW1wYWlnbl0uY2xpY2tzLmxlbmd0aAogICAgICByZXR1cm4gYXZlcmFnZUNsaWNrcy50b0ZpeGVkKDIpCiAgICB9LAogIH0KfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <v-container>\n        <v-row v-if=\"loaded\" class=\"d-flex justify-center align-center text-center\" style=\"height:100vh\">\n          <v-col>\n            <v-row>\n              <v-col>\n                <p>Campaign {{ campaignsData[selectedCampaign].name }} - ID: {{ campaignsData[selectedCampaign].id }}</p>\n              </v-col>\n              <v-col>\n                <v-menu>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"primary\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    >\n                      Switch campaign\n                    </v-btn>\n                  </template>\n                  <v-list>\n                    <v-list-item\n                      v-for=\"(campaign, index) in campaignsData\"\n                      :key=\"campaign.id\"\n                      @click=\"selectedCampaign = index\"\n                    >\n                      <v-list-item-title>{{ campaign.name }} - {{ campaign.id }}</v-list-item-title>\n                    </v-list-item>\n                  </v-list>\n                </v-menu>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-col>\n                <v-row>\n                  <Chart :chartdata=\"campaignsData[selectedCampaign]\" :options=\"options\" :styles=\"styles\" />\n                </v-row>\n                <v-row>\n                  <v-col>\n                    <h1>Statistics</h1>\n                    <v-row>\n                      <v-col>\n                        <h3>Average CPC</h3>\n                        <h4>{{ getAverageCPC }}</h4>\n                      </v-col>\n                    </v-row>\n                    <v-row>\n                      <v-col>\n                        <h3>Average Spend</h3>\n                        <p>{{ getAverageSpend }}</p>\n                      </v-col>\n                      <v-col>\n                        <h3>Average Clicks</h3>\n                        <p>{{ getAverageClicks }}</p>\n                      </v-col>\n                    </v-row>\n                  </v-col>\n                </v-row>\n              </v-col>\n            </v-row>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport Chart from './components/Chart.vue'\n\nexport default {\n  components: {\n    Chart\n  },\n  name: 'App',\n  data: () => ({\n    loaded: false,\n    error: false,\n    campaignsData: [],\n    selectedCampaign: 0,\n    styles: {\n      height: '20%',\n      width: '100%'\n    }\n  }),\n  async mounted() {\n    try {\n      const rawData = await (await fetch('http://localhost:3001/facebook/getCpc')).json()\n      this.prepareData(rawData)\n    } catch(e) {\n      this.error = true\n      console.log(e)\n    }\n  },\n  methods: {\n    prepareData(data) {\n      for(let [key, value] of Object.entries(data)) {\n        this.campaignsData.push({\n          id: key,\n          name: value.name,\n          labels: value.weeklyData.map(week => week.date_start),\n          datasets: [{\n            label: 'CPC',\n            data: value.weeklyData.map(week => week.cpc),\n            borderColor: '#BCDCE1'\n          }],\n          spend: value.weeklyData.map(week => week.spend),\n          clicks: value.weeklyData.map(week => week.clicks)\n        })\n      }\n      this.loaded = true\n    },\n  },\n  computed: {\n    getAverageCPC() {\n      let cpc = 0\n      this.campaignsData[this.selectedCampaign].datasets[0].data.forEach(weeklyCpc => cpc += parseFloat(weeklyCpc))\n\n      const averageCPC = cpc / this.campaignsData[this.selectedCampaign].datasets[0].data.length\n      return averageCPC.toFixed(2)\n    },\n    getAverageSpend() {\n      let spend = 0\n      this.campaignsData[this.selectedCampaign].spend.forEach(weeklySpend => spend += parseFloat(weeklySpend))\n\n      const averageSpend = spend / this.campaignsData[this.selectedCampaign].spend.length\n      return averageSpend.toFixed(2)\n    },\n    getAverageClicks() {\n      let clicks = 0\n      this.campaignsData[this.selectedCampaign].clicks.forEach(weeklyClicks => clicks += parseFloat(weeklyClicks))\n\n      const averageClicks = clicks / this.campaignsData[this.selectedCampaign].clicks.length\n      return averageClicks.toFixed(2)\n    },\n  }\n};\n</script>\n"]}]}